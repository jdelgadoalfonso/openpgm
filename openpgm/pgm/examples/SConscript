# -*- mode: python -*-
# OpenPGM build script
# $Id$

import os;

Import('env');
e = env.Clone();
e.Prepend(LIBS = ['libpgmex', 'libpgm']);
p = e.Clone();
e.MergeFlags(env['GLIB_FLAGS']);
f = e.Clone();
if f['WITH_SNMP'] == 'true':
	f.Append(CCFLAGS = ['-DCONFIG_WITH_SNMP']);
	f.Prepend(LIBS = ['libpgmsnmp']);
	f.MergeFlags(e['SNMP_FLAGS']);
if f['WITH_HTTP'] == 'true':
	f.Append(CCFLAGS = ['-DCONFIG_WITH_HTTP']);
	f.Prepend(LIBS = ['libpgmhttp']);
	f.MergeFlags(e['LIBSOUP_FLAGS']);

# core preferred examples
e.Program(['pgmdump.c'])
f.Program(['pgmsend.c'])
f.Program(['pgmrecv.c'])

# sync examples
e.Program(['blocksyncrecv.c'])
e.Program(['snonblocksyncrecv.c'])
if '-DCONFIG_HAVE_POLL' in e['CCFLAGS']:
	e.Program(['pnonblocksyncrecv.c'])

# epoll based examples
if '-DCONFIG_HAVE_EPOLL' in e['CCFLAGS']:
	e.Program(['enonblocksyncrecv.c'])
	e.Program(['enonblocksyncrecvmsg.c'])
	e.Program(['enonblocksyncrecvmsgv.c'])

# ncurses examples
if e['WITH_NCURSES'] == 'true':
	ne = e.Clone()
	ne.Append(LIBS = ['panel', 'ncurses']);
	ne.Program(['pgmtop.c'])

# Google Protocol Buffer example
if f['WITH_PROTOBUF'] == 'true':
	ge = f.Clone();
	newCCFLAGS = [];
	for flag in ge['CCFLAGS']:
		if ("-W" != flag[:2]) and ("-std=gnu99" != flag[:10]) and ("-pedantic" != flag[:9]) and ("-D_XOPEN_SOURCE=600" != flag[:19]) and ("-xc99=all" != flag[:9]):
			newCCFLAGS.append(flag);
		if ("-D_XOPEN_SOURCE=600" == flag[:19]):
			newCCFLAGS.append("-D_XOPEN_SOURCE=500");
	ge['CCFLAGS'] = newCCFLAGS;
	ge.Append(CPPPATH = '.');
	ge.Append(CCFLAGS = ge['PROTOBUF_CCFLAGS']);
	ge.Depends('pgmping.cc', ['ping.pb.cc', 'ping.pb.h']);
	protobuf = Builder(action = 'cd ${SOURCE.dir} && %s ${SOURCE.file} --cpp_out=../${TARGET.dir}' % ge['PROTOBUF_PROTOC'])
	ge.Append(BUILDERS = {'Protobuf' : protobuf})
	ge.Protobuf('ping.pb.cc', 'ping.proto')
	ge.Program(['pgmping.cc', 'ping.pb.cc', ge['PROTOBUF_LIBS']])

# Vanilla example
p.Program(['purinrecv.c'])

# end of file
