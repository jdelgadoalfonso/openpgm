diff -urN include-original/mswsock.h include/mswsock.h
--- include-original/mswsock.h	2009-08-21 22:41:22.000000000 +0800
+++ include/mswsock.h	2009-08-21 22:42:08.000000000 +0800
@@ -101,6 +101,29 @@
 #define WSA_CMSG_LEN(length)
 #endif
 
+#ifndef _ALIGNBYTES
+#define _ALIGNBYTES	(sizeof(int) - 1)
+#endif
+
+#ifndef _ALIGN
+#define _ALIGN(p)	(((unsigned)(p) + _ALIGNBYTES) & ~_ALIGNBYTES)
+#endif
+
+#define WSA_CMSG_DATA(cmsg)		\
+	((unsigned char *)(cmsg) + _ALIGN(sizeof(struct wsacmsghdr))) 
+#define WSA_CMSG_NXTHDR(mhdr, cmsg)	\
+	(((char *)(cmsg) + _ALIGN((cmsg)->cmsg_len) + \
+		_ALIGN(sizeof(struct wsacmsghdr)) > \
+		(char *)(mhdr)->Control.buf + (mhdr)->Control.len) ? \
+		(struct wsacmsghdr *)0 : \
+		(struct wsacmsghdr *)((char *)(cmsg) + _ALIGN((cmsg)->cmsg_len)))
+#define WSA_CMSG_FIRSTHDR(mhdr) \
+	((mhdr)->Control.len >= sizeof(struct wsacmsghdr) ? \
+	 (struct wsacmsghdr *)(mhdr)->Control.buf : \
+	 (struct wsacmsghdr *)NULL)
+#define WSA_CMSG_SPACE(l)	(_ALIGN(sizeof(struct wsacmsghdr)) + _ALIGN(l))
+#define WSA_CMSG_LEN(l)	(_ALIGN(sizeof(struct wsacmsghdr)) + (l))
+
 BOOL PASCAL DisconnectEx(SOCKET,LPOVERLAPPED,DWORD,DWORD);
 int PASCAL WSARecvMsg(SOCKET,LPWSAMSG,LPDWORD,LPWSAOVERLAPPED,LPWSAOVERLAPPED_COMPLETION_ROUTINE);
 
diff -urN include-original/ws2tcpip.h include/ws2tcpip.h
--- include-original/ws2tcpip.h	2009-08-21 22:41:42.000000000 +0800
+++ include/ws2tcpip.h	2009-08-21 22:42:15.000000000 +0800
@@ -78,6 +78,18 @@
 
 #define UDP_NOCHECKSUM 1
 
+/* RFC 3768 */
+#define MCAST_JOIN_GROUP	41
+#define MCAST_LEAVE_GROUP	42
+#define MCAST_BLOCK_SOURCE	43
+#define MCAST_UNBLOCK_SOURCE	44
+#define MCAST_JOIN_SOURCE_GROUP	45
+#define MCAST_LEAVE_SOURCE_GROUP	46
+#define MCAST_MSFILTER		47
+
+#define MCAST_EXCLUDE   0
+#define MCAST_INCLUDE   1
+
 /* INTERFACE_INFO iiFlags */
 #define IFF_UP  1
 #define IFF_BROADCAST   2
@@ -104,6 +116,7 @@
 #define AI_PASSIVE	1
 #define AI_CANONNAME	2
 #define AI_NUMERICHOST	4
+#define AI_ADDRCONFIG	0x20
 
 /* getaddrinfo error codes */
 #define EAI_AGAIN	WSATRY_AGAIN
@@ -132,6 +145,25 @@
 	struct in_addr	imr_interface;
 };
 
+struct group_req {
+	u_long		gr_interface;
+	struct sockaddr_storage gr_group;
+};
+
+struct group_source_req {
+	u_long		gsr_interface;
+	struct sockaddr_storage	gsr_group;
+	struct sockaddr_storage gsr_source;
+};
+
+struct group_filter {
+	u_long		gf_interface;
+	struct sockaddr_storage	gf_group;
+	u_long		gf_fmode;
+	u_long		gf_numsrc;
+	struct in_addr	gf_slist[1];
+};
+
 struct ip_msfilter {
 	struct in_addr	imsf_multiaddr;
 	struct in_addr	imsf_interface;
@@ -356,6 +388,13 @@
 	sockaddr_gen	iiNetmask;
 } INTERFACE_INFO, *LPINTERFACE_INFO;
 
+typedef struct _INTERFACE_INFO_EX {
+	u_long		iiFlags;
+	SOCKET_ADDRESS	iiAddress;
+	SOCKET_ADDRESS	iiBroadcastAddress;
+	SOCKET_ADDRESS	iiNetmask;
+} INTERFACE_INFO_EX, *_LPINTERFACE_INFO_EX;
+
 /*
    The definition above can cause problems on NT4,prior to sp4.
    To workaround, include the following struct and typedef and
