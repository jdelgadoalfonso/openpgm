# -*- mode: python -*-
# OpenPGM build script
# $Id$

EnsureSConsVersion( 0, 96 )

opt = Options(None, ARGUMENTS)
opt.AddOptions (
	(EnumOption ('BUILD', 'DEBUG, PROFILE, or RELEASE build environment', 'debug', ('release', 'debug', 'profile'))),
)

import os
env = Environment(ENV = os.environ,
	CCFLAGS = ['-pipe', '-Wall', '-pedantic', '-std=gnu99', '-D_REENTRANT'],
	LINKFLAGS = ['-pipe']
)
opt.Update (env)

# Define separate build environments
release = env.Copy(BUILD = 'release')
release.Append(CCFLAGS = '-O2')

debug = env.Copy(BUILD = 'debug')
debug.Append(CCFLAGS = '-ggdb', LINKFLAGS = '-gdb')

profile = env.Copy(BUILD = 'profile')
profile.Append(CCFLAGS = ['-O2','-pg'], LINKFLAGS = '-pg')


# choose and environment to build
if env['BUILD'] == 'release':
	Export({'env':release})
elif env['BUILD'] == 'profile':
	Export({'env':profile})
else:
	Export({'env':debug})

Import('env')
ref_node = 'ref/' + env['BUILD'] + '/';
BuildDir(ref_node, '.', duplicate=0)
SConscript(ref_node + 'SConscript')

# end of file
